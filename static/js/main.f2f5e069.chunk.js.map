{"version":3,"sources":["containers/assignment1/Assignment1.js","containers/assignment2/columns.js","containers/assignment2/RenderTable.js","containers/assignment2/Assignment2.js","containers/home/Card.js","containers/home/Home.js","App.js","index.js"],"names":["Assignment1","data","console","log","localStorage","getItem","JSON","parse","setItem","stringify","useState","inputValue","setInputValue","taskList","setTaskList","id","setId","showHide","setShowHide","activeTaskContent","setActiveTaskContent","activeTaskId","setActiveTaskId","useEffect","handleClose","prev","addNewTask","prevId","prevValue","newData","editTaskHandler","event","objId","Number","target","tasks","deleteTask","filter","item","Container","Row","style","marginTop","length","Col","xs","md","lg","type","className","value","placeholder","onKeyPress","e","key","defaultValue","onChange","Button","variant","onClick","minHeight","map","val","index","disabled","textAlign","Modal","show","size","onHide","Header","closeButton","Title","Body","Footer","COLUMNS","accessor","RenderTable","columnsData","canPreviousPage","previousPageHandler","nextPageHandler","currentPage","columns","useMemo","tableINstance","useTable","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","Table","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","column","thIndex","getHeaderProps","render","row","rowIndex","getRowProps","cells","cellIndex","getCellProps","src","alt","Assignment2","apiData","setApiData","setCurrentPage","isLoading","setIsLoading","setCanPreviousPage","axios","get","then","res","response","catch","error","prevPage","Card","name","assignmentList","details","url","Home","linkData","to","textDecoration","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"uaA8ImBA,MAtInB,WAEI,IAAIC,EADJC,QAAQC,IAAI,gBAERC,aAAaC,QAAQ,SACrBH,QAAQC,IAAI,OACZF,EAAOK,KAAKC,MAAMH,aAAaC,QAAQ,WAEvCD,aAAaI,QAAQ,OAAQF,KAAKG,UAAU,KAC5CR,EAAO,IAGPC,QAAQC,IAAI,CAAEF,SAXC,MAYqBS,mBAAS,IAZ9B,mBAYRC,EAZQ,KAYIC,EAZJ,OAaiBF,mBAAST,GAb1B,mBAaRY,EAbQ,KAaEC,EAbF,OAcKJ,mBAAS,MAdd,mBAcRK,EAdQ,KAcJC,EAdI,OAeiBN,oBAAS,GAf1B,mBAeRO,EAfQ,KAeEC,EAfF,OAgBmCR,mBAAS,IAhB5C,mBAgBRS,EAhBQ,KAgBWC,EAhBX,OAiByBV,mBAAS,MAjBlC,mBAiBRW,EAjBQ,KAiBMC,EAjBN,KAyBfC,qBAAU,WACNnB,aAAaI,QAAQ,OAAQF,KAAKG,UAAUI,MAC7C,CAACA,IAEJ,IAIMW,EAAc,WAChBN,GAAY,SAAAO,GAAI,OAAKA,MAInBC,EAAa,WAEfV,GAAM,SAAAW,GAAM,OAAIA,EAAS,KACzBb,GAAY,SAAAc,GACR,IAAIC,EAAU,GAGd,OAFAA,EAAO,GAASd,EAChBc,EAAO,MAAYlB,EACb,GAAN,mBACQE,GADR,CAEQgB,OAIZjB,EAAc,KAUZkB,EAAkB,SAACC,GACrB,IAAIC,EAAQC,OAAOF,EAAMG,OAAOnB,IAChCS,IACAJ,EAAqBP,EAASmB,GAAOG,OACrCb,EAAgBU,IAEdI,EAAa,SAACL,GAChB,IAAMhB,EAAKkB,OAAOF,EAAMG,OAAOnB,IAC/BD,EAAYD,EAASwB,QAAO,SAAAC,GAAI,OAAIA,EAAKvB,KAAOA,OAEpD,OACI,qCACI,eAACwB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,qBAAIC,MAAO,CAACC,UAAU,MAAtB,2BAA4C7B,EAAS8B,YAEzD,uBACA,eAACH,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAKC,IAAE,EAACC,IAAE,EAACC,GAAG,KAAd,SACI,uBAAOC,KAAK,OAAOC,UAAU,YAAYC,MAAOvC,EAAawC,YAAY,oBAAoBC,WA7D1F,SAACC,GACN,UAAVA,EAAEC,KACF5B,KA2DqI6B,aAAa,GAAGC,SAnDrI,SAACzB,GACrBnB,EAAcmB,EAAMG,OAAOgB,YAoDf,cAACN,EAAA,EAAD,CAAKC,IAAE,EAACC,IAAE,EAACC,GAAG,IAAd,SACI,cAACU,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASjC,EAAnC,6BAKZ,uBACA,cAACa,EAAA,EAAD,CAAWE,MAAO,CAACmB,UAAU,QAA7B,SACI,qBAAKX,UAAU,kBAAf,SAESpC,EAAS8B,OAAS,EACf9B,EAASgD,KAAI,SAACC,EAAKC,GACf,OACI,gCACI,sBAAkBd,UAAU,kBAA5B,UACI,uBAAOD,KAAK,OAAOC,UAAU,iBAAiBC,MAAOY,EAAI3B,MAAOoB,aAAa,GAAGS,UAAQ,IAExF,cAACP,EAAA,EAAD,CAAQC,QAAQ,UAAU3C,GAAIgD,EAAOJ,QAAS7B,EAA9C,kBAGA,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,SAAS3C,GAAI+C,EAAI/C,GAAI4C,QAASvB,EAA9C,sBANM0B,EAAI/C,IAUd,yBAXMgD,MAejB,qBAAKtB,MAAO,CAAEwB,UAAW,UAAzB,iCAIjB,eAACC,EAAA,EAAD,CAAOC,KAAMlD,EAAUmD,KAAK,KAAKC,OAAQ7C,EAAzC,UACI,cAAC0C,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,0BAEJ,cAACN,EAAA,EAAMO,KAAP,UACI,uBAAOzB,KAAK,OAAOC,UAAU,iBAAiBC,MAAO/B,EAAmBqC,SA7DvE,SAACzB,GACdX,EAAqBW,EAAMG,OAAOgB,QA4DsEK,aAAa,OAE7G,eAACW,EAAA,EAAMQ,OAAP,WACI,cAACjB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASnC,EAArC,mBAGA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAvEtB,SAAC5B,GACjBlB,EAASQ,GAAcc,MAAQhB,EAC/BK,KAqEY,oC,iBCrIXmD,EAAU,CAMnB,CACIL,OAAO,UACPM,SAAS,UAEb,CACIN,OAAO,QACPM,SAAS,SAEb,CACIN,OAAO,YACPM,SAAS,cAEb,CACIN,OAAO,WACPM,SAAS,c,+BCmDFC,MAjEf,YAAkH,IAA3FC,EAA0F,EAA1FA,YAAaC,EAA6E,EAA7EA,gBAAiB7B,EAA4D,EAA5DA,MAAO8B,EAAqD,EAArDA,oBAAqBC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,YAC9FhF,QAAQC,IAAI+C,GACZ,IAAMiC,EAAUC,mBAAQ,kBAAMN,IAAa,IACrC7E,EAAOmF,mBAAQ,kBAAMlC,IAAO,IAC5BmC,EAAgBC,mBAAS,CAC3BH,UACAlF,QACDsF,iBAECC,EAKAH,EALAG,cACAC,EAIAJ,EAJAI,kBACAC,EAGAL,EAHAK,aACAC,EAEAN,EAFAM,KACAC,EACAP,EADAO,WAGJ,OACI,qCACI,eAACC,EAAA,EAAD,yBAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC5B,KAAK,MAASoB,KAA5C,cACI,gCACKE,EAAa7B,KAAI,SAACoC,GAAD,OACd,8CAAQA,EAAYC,uBAApB,aAEQD,EAAYE,QAAQtC,KAAI,SAACuC,EAAQC,GAAT,OACpB,8CAAsBD,EAAOE,kBAA7B,aAAgDF,EAAOG,OAAO,YAArDF,cAO7B,iDAAWZ,KAAX,aACKE,EAAK9B,KAAI,SAAC2C,EAAKC,GAEZ,OADAb,EAAWY,GAEP,8CAAuBA,EAAIE,eAA3B,aAEQF,EAAIG,MAAM9C,KAAI,SAAC8C,EAAOC,GAElB,OADA1G,QAAQC,IAAI,MAAOwG,GAEf,8CAAwBA,EAAME,cAA9B,aACmB,IAAdD,EAAkBD,EAAMJ,OAAO,QAAU,qBAAKtD,UAAU,SAAS6D,IAAKH,EAAMzD,MAAO6D,IAAI,gBADnFH,QALhBH,aAiBzB,uBACA,gCACI,gDACiB,IACb,iCAASvB,IAAsB,OAC3B,IACR,wBAAQvB,QAAS,kBAAMqB,KAAuBhB,SAAUe,EAAxD,sBACA,wBAAQpB,QAAS,kBAAMsB,KAAvB,yB,MCGD+B,MA5Df,WAAwB,IAAD,EACWtG,mBAAS,IADpB,mBACZuG,EADY,KACHC,EADG,OAEmBxG,mBAAS,GAF5B,mBAEZwE,EAFY,KAECiC,EAFD,OAGezG,oBAAS,GAHxB,mBAGZ0G,EAHY,KAGDC,EAHC,OAI0B3G,oBAAS,GAJnC,mBAIZqE,EAJY,KAIIuC,EAJJ,KAiDnB,OARA/F,qBAAU,WAjCNgG,IAAMC,IAAN,UAVS,qCAUT,OAAwBtC,IACnBuC,MAAK,SAACC,GACH,IAAMC,EAAWD,EAAIzH,KACrBC,QAAQC,IAAIwH,EAAS1H,MACrBiH,EAAWS,EAAS1H,MACpBoH,GAAcD,MAEjBQ,OAAM,SAACC,GACJ3H,QAAQC,IAAI0H,MA2BD,IAAhB3C,GACCoC,GAAmB,KAExB,CAACpC,IAGAkC,EACO,qBAAKnE,UAAU,kBAAf,wBAGP,sBAAKA,UAAU,kBAAf,UACI,uBACA,cAAC,EAAD,CAAa6B,YAAaH,EAASI,gBAAiBA,EAAiBG,YAAaA,EAAaD,gBAnC/E,WAEpBkC,GAAe,SAAAW,GAAQ,OAAIA,EAAW,KACtC5H,QAAQC,IAAI,CAAC+E,gBACboC,GAAmB,GACnBD,GAAcD,IA8BuHpC,oBA3B5G,WACzB9E,QAAQC,IAAI,CAAC+E,gBACO,IAAhBA,GACAiC,EAAe,GACfG,GAAmB,KAGnBH,GAAe,SAAAW,GAAQ,OAAIA,EAAW,KACtCT,GAAcD,KAmB6JlE,MAAO+D,Q,YCpD/Kc,MARf,YAAsB,IAAPjE,EAAM,EAANA,IACX,OACI,qBAAKb,UAAU,iBAAf,SACI,sBAAMA,UAAU,YAAhB,SAA6Ba,EAAIkE,UCEvCC,EAAiB,CACnB,CACIlH,GAAG,EACHiH,KAAK,cACLE,QAAQ,YACRC,IAAI,gBAER,CACIpH,GAAG,EACHiH,KAAK,cACLE,QAAQ,2BACRC,IAAI,iBAyCGC,MAtCf,WACI,IAAMC,EAAYJ,EAAepE,KAAI,SAACC,EAAIC,GACtC,OACI,8BACI,cAAC,IAAD,CAAOuE,GAAIxE,EAAIqE,IAAK1F,MAAO,CAAC8F,eAAe,QAA3C,SAAoD,cAAC,EAAD,CAAoBzE,IAAOA,GAAfA,EAAI/C,OAD9D+C,EAAI/C,OAMtB,OACI,eAAC,IAAD,WACI,qBAAKkC,UAAU,iBAAf,SAEOoF,IAGP,uBACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOG,KAAK,eAAZ,SACI,cAACjG,EAAA,EAAD,CAAWU,UAAU,uBAArB,SACI,cAAC,EAAD,QAKR,cAAC,IAAD,CAAOuF,KAAK,eAAZ,SACI,cAACjG,EAAA,EAAD,CAAWU,UAAU,uBAArB,SACI,cAAC,EAAD,eCvCTwF,MARf,WACE,OACE,qBAAKxF,UAAU,MAAf,SACE,cAAC,EAAD,OCCNyF,IAASnC,OACP,cAAC,IAAMoC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f2f5e069.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../assignment1/assignment1.css';\r\nimport { Card, Button, Modal, Row, Col, Form, Container } from 'react-bootstrap';\r\nimport { GrAdd } from 'react-icons/gr';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\n\r\nfunction Assignment1() {\r\n    console.log(\"assignement1\");\r\n    var data;\r\n    if (localStorage.getItem('task')) {\r\n        console.log(\"iff\");\r\n        data = JSON.parse(localStorage.getItem('task'));\r\n    } else {\r\n        localStorage.setItem('task', JSON.stringify([]));\r\n        data = [];\r\n    }\r\n    \r\n        console.log({ data });\r\n        const [inputValue, setInputValue] = useState('');\r\n        const [taskList, setTaskList] = useState(data);\r\n        const [id, setId] = useState(1001);\r\n        const [showHide, setShowHide] = useState(false);\r\n        const [activeTaskContent, setActiveTaskContent] = useState('');\r\n        const [activeTaskId, setActiveTaskId] = useState(null);\r\n\r\n        const handleKeyPress = (e) => {\r\n            if (e.key === 'Enter') {\r\n                addNewTask()\r\n            }\r\n          }\r\n\r\n        useEffect(() => {\r\n            localStorage.setItem('task', JSON.stringify(taskList));\r\n        }, [taskList])\r\n\r\n        const onChangeHandler = (event) => {\r\n            setInputValue(event.target.value);\r\n        }\r\n\r\n        const handleClose = () => {\r\n            setShowHide(prev => !prev);\r\n        }\r\n\r\n\r\n        const addNewTask = () => {\r\n\r\n            setId(prevId => prevId + 1);\r\n            setTaskList(prevValue => {\r\n                let newData = {};\r\n                newData['id'] = id;\r\n                newData['tasks'] = inputValue;\r\n                return (\r\n                    [...taskList,\r\n                        newData]\r\n                )\r\n            }\r\n            )\r\n            setInputValue('');\r\n        }\r\n\r\n        const saveHandler = (event) => {\r\n            taskList[activeTaskId].tasks = activeTaskContent;\r\n            handleClose();\r\n        }\r\n        const editTask = (event) => {\r\n            setActiveTaskContent(event.target.value)\r\n        }\r\n        const editTaskHandler = (event) => {\r\n            let objId = Number(event.target.id);\r\n            handleClose();\r\n            setActiveTaskContent(taskList[objId].tasks);\r\n            setActiveTaskId(objId);\r\n        }\r\n        const deleteTask = (event) => {\r\n            const id = Number(event.target.id);\r\n            setTaskList(taskList.filter(item => item.id !== id))\r\n        }\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <Row>\r\n                        <h4 style={{marginTop:'1%'}}>Total Tasks:- {taskList.length}</h4>\r\n                    </Row>\r\n                    <br />\r\n                    <Row>\r\n                        <Col xs md lg=\"10\">\r\n                            <input type=\"text\" className=\"input_box\" value={inputValue}  placeholder=\"Type task here...\" onKeyPress={handleKeyPress} defaultValue=\"\" onChange={onChangeHandler} />\r\n                        </Col>\r\n                        <Col xs md lg=\"2\">\r\n                            <Button variant=\"success\" onClick={addNewTask}>Add New</Button>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n                <hr />\r\n                <Container style={{minHeight:'10vh'}}>\r\n                    <div className=\"tasks_container\">\r\n                        {\r\n                            (taskList.length > 0) ? (\r\n                                taskList.map((val, index) => {\r\n                                    return (\r\n                                        <div key={index}>\r\n                                            <div key={val.id} className=\"items_container\">\r\n                                                <input type=\"text\" className=\"task_input_box\" value={val.tasks} defaultValue=\"\" disabled />\r\n\r\n                                                <Button variant=\"primary\" id={index} onClick={editTaskHandler}>Edit</Button>\r\n\r\n\r\n                                                <Button variant=\"danger\" id={val.id} onClick={deleteTask}>Delete</Button>\r\n\r\n\r\n                                            </div>\r\n                                            <br />\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            ) : (<div style={{ textAlign: 'center' }}>Nothing to show</div>)\r\n                        }\r\n                    </div>\r\n                </Container>\r\n                <Modal show={showHide} size=\"lg\" onHide={handleClose} >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Edit Task</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" className=\"task_input_box\" value={activeTaskContent} onChange={editTask} defaultValue=\"\" />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={saveHandler}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n    export default Assignment1\r\n","export const COLUMNS = [\r\n    // {\r\n    //     Header:'#',\r\n    //     accessor:'id'\r\n\r\n    // },\r\n    {\r\n        Header:'Profile',\r\n        accessor:'avatar'\r\n    },\r\n    {\r\n        Header:'Email',\r\n        accessor:'email'\r\n    },\r\n    {\r\n        Header:'FirstName',\r\n        accessor:'first_name'\r\n    },\r\n    {\r\n        Header:'LastName',\r\n        accessor:'last_name'\r\n    },\r\n    \r\n]\r\n","import React, { useMemo } from 'react'\r\nimport { useTable, usePagination } from 'react-table';\r\nimport './table.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction RenderTable({ columnsData, canPreviousPage, value, previousPageHandler, nextPageHandler, currentPage }) {\r\n    console.log(value);\r\n    const columns = useMemo(() => columnsData, []);\r\n    const data = useMemo(() => value, []);\r\n    const tableINstance = useTable({\r\n        columns,\r\n        data,\r\n    }, usePagination)\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        prepareRow\r\n    } = tableINstance\r\n\r\n    return (\r\n        <>\r\n            <Table striped bordered hover size=\"sm\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {\r\n                                headerGroup.headers.map((column, thIndex) => (\r\n                                    <th key={thIndex} {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))}\r\n\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, rowIndex) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr key={rowIndex} {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map((cells, cellIndex) => {\r\n                                        console.log('---', cells);\r\n                                        return (\r\n                                            <td key={cellIndex} {...cells.getCellProps}>\r\n                                                {cellIndex !== 0 ? cells.render('Cell') : <img className=\"avatar\" src={cells.value} alt=\"Not Found\"/>}\r\n                                            </td>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n\r\n            </Table>\r\n            <br />\r\n            <div>\r\n                <span>\r\n                    Current Page{' '}\r\n                    <strong>{currentPage}</strong>{' '}\r\n                </span>{' '}\r\n                <button onClick={() => previousPageHandler()} disabled={canPreviousPage}>Previous</button>\r\n                <button onClick={() => nextPageHandler()} >Next</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RenderTable;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { COLUMNS } from './columns';\r\nimport RenderTable from './RenderTable';\r\nimport '../assignment2/assignment2.css';\r\n\r\nconst base_url = \"https://reqres.in/api/users?page=\";\r\n\r\nfunction Assignment2() {\r\n    const [apiData, setApiData] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [canPreviousPage,setCanPreviousPage] = useState(true);\r\n\r\n\r\n    const apiCall = () => {\r\n        axios.get(`${base_url}${currentPage}`)\r\n            .then((res) => {\r\n                const response = res.data;\r\n                console.log(response.data);\r\n                setApiData(response.data);\r\n                setIsLoading(!isLoading);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const nextPageHandler = () => {\r\n        \r\n        setCurrentPage(prevPage => prevPage + 1)\r\n        console.log({currentPage})\r\n        setCanPreviousPage(false)\r\n        setIsLoading(!isLoading);\r\n    }\r\n    \r\n    const  previousPageHandler = () => {\r\n        console.log({currentPage})\r\n        if (currentPage === 1 ) {\r\n            setCurrentPage(1)\r\n            setCanPreviousPage(true)\r\n        }else\r\n        {\r\n            setCurrentPage(prevPage => prevPage - 1)\r\n            setIsLoading(!isLoading);\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        apiCall()\r\n        if(currentPage === 1) {\r\n            setCanPreviousPage(true)\r\n        }       \r\n    }, [currentPage])\r\n\r\n    \r\n    if (isLoading) {\r\n        return <div className=\"table_container\">Loading...</div>;\r\n    }\r\n    return (\r\n        <div className=\"table_container\">\r\n            <br/>\r\n            <RenderTable columnsData={COLUMNS} canPreviousPage={canPreviousPage} currentPage={currentPage} nextPageHandler={nextPageHandler} previousPageHandler={previousPageHandler} value={apiData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Assignment2\r\n","import React from 'react'\r\nimport './card.css';\r\n\r\nfunction Card({val}) {\r\n    return (\r\n        <div className=\"card_container\">\r\n            <span className=\"task_name\">{val.name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Link, Route,Switch} from 'react-router-dom';\r\nimport Assignment1 from '../assignment1/Assignment1';\r\nimport Assignment2 from '../assignment2/Assignment2';\r\nimport './home.css';\r\nimport Card from './Card';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst assignmentList = [\r\n    {\r\n        id:1,\r\n        name:'Assigment 1',\r\n        details:'Todo App.',\r\n        url:'/assignment1'\r\n    },\r\n    {\r\n        id:2,\r\n        name:'Assigment 2',\r\n        details:'Display a list of users.',\r\n        url:'/assignment2'\r\n    }\r\n];\r\nfunction Home() {\r\n    const linkData =  assignmentList.map((val,index) => {\r\n        return (\r\n            <div key={val.id}>\r\n                <Link  to={val.url} style={{textDecoration:\"none\"}}><Card  key={val.id} val = {val} /></Link>\r\n            </div>\r\n            \r\n        );\r\n    })\r\n    return (\r\n        <Router>\r\n            <div className=\"home_container\">\r\n                {\r\n                   linkData\r\n                }\r\n            </div>\r\n            <br/>\r\n            <Switch>\r\n                <Route path=\"/assignment1\">                    \r\n                    <Container className=\"assignment_container\">\r\n                        <Assignment1 />\r\n                    </Container>\r\n                        \r\n                    \r\n                </Route>\r\n                <Route path=\"/assignment2\">\r\n                    <Container className=\"assignment_container\">\r\n                        <Assignment2 />\r\n                    </Container>\r\n                    \r\n                </Route>\r\n                </Switch>\r\n        </Router>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\nimport Home from './containers/home/Home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}